<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.3.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd"  >

    <!-- ①：对com.textbooks包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.textbooks"/>
    <!--静态页面交由默认web servlet处理-->
    <mvc:annotation-driven />
    <mvc:default-servlet-handler/>
    <!-- 静态资源访问 -->
    <!--如果webapp下你新建了文件夹，想访问里面的静态资源，那么就要在这配置一下-->
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <!--<mvc:resources location="/styles/" mapping="/styles/**"/>-->
    <mvc:resources location="/js/" mapping="/js/**"/>

    <!-- Configures the @Controller programming model
    <mvc:annotation-driven />-->
    <!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8"></property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--=========================jackson config=======================================-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                        <property name="targetObject">
                            <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                                <property name="serializationInclusion" value="NON_NULL"></property>
                            </bean>
                        </property>
                        <property name="targetMethod" value="configure"></property>
                        <property name="arguments">
                            <list>
                                <value>FAIL_ON_UNKNOWN_PROPERTIES</value>
                                <value>false</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"></constructor-arg>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置视图解析器，把控制器的逻辑视频映射为真正的视图 -->
    <!-- /WEB-INF/jsp/start.jsp -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!--网页文件存放位置-->
       <property name="prefix" value="/WEB-INF/views/" />
       <!-- <property name="prefix" value="/" />-->
        <!--相当于url后缀加上.jsp-->
        <property name="suffix" value=".html" />
    </bean>

    <!--===============================自动生成sqlSessionFactory========================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:sqlmap/*.xml"></property>
        <property name="typeAliasesPackage" value="com.textbooks.entity"></property>
    </bean>
    <!--===============================映射dao接口======================================-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="com.textbooks.dao"></property>
    </bean>

    <!-- 配置dbcp数据库连接池 -->
    <!-- <context:property-placeholder location="classpath:db.properties"/> -->
    <!--数据库配置 -->
    <bean id = "propertyConfigurer" class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>

    </bean>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maxTotal" value="${db.maxTotal}"/>
        <property name="maxIdle" value="${db.maxIdle}"/>
        <property name="minIdle" value="${db.minIdle}"/>
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="maxWaitMillis" value="${db.maxWaitMillis}"/>
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        <property name="validationQuery" value="${db.validationQuery}"/>
        <property name="testOnBorrow" value="${db.testOnBorrow}"/>
        <property name="poolPreparedStatements" value="${db.poolPreparedStatements}"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors>
    <!-- 定义无Controller的path<->view直接映射 -->
    <!-- <mvc:view-controller path="/" view-name="redirect:/" /> -->




</beans>